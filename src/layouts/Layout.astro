---
import { SEO } from "astro-seo";
import type { Props as SEOProps } from "astro-seo";

import "../assets/base.css";

export interface Props {
  seo: SEOProps;
}

const { seo } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <SEO {...seo} />
  </head>
  <body class="bg-gray-50 text-gray-900 dark:bg-gray-900 dark:text-white">
    <slot />
    <script is:inline>
      const themeButton = document.getElementById("theme-switch"); //as HTMLButtonElement | null;

      function isUserPreferedThemeDark() {
        let darkTheme = null;

        const userChoice = localStorage.getItem("theme");
        if (userChoice === "dark") darkTheme = true;
        if (userChoice === "light") darkTheme = false;

        if (darkTheme === null)
          darkTheme = window.matchMedia("(prefers-color-scheme: dark)").matches;

        return darkTheme;
      }

      function setTheme() {
        const darkTheme = isUserPreferedThemeDark();

        if (darkTheme) {
          document.documentElement.classList.add("dark");
          if (themeButton) themeButton.innerText = "Light ☀️";
        } else {
          document.documentElement.classList.remove("dark");
          if (themeButton) themeButton.innerText = "Dark 🌙";
        }
      }

      function changeTheme(theme) {
        //: "dark" | "light" | "system") {
        if (theme === "system") delete localStorage.theme;
        else localStorage.theme = theme;

        document.body.classList.add("transition-colors");
        setTheme();
        document.body.classList.remove("transition-colors");
      }

      setTheme();

      themeButton?.addEventListener("click", () => {
        const darkTheme = isUserPreferedThemeDark();
        if (darkTheme) changeTheme("light");
        else changeTheme("dark");
      });
    </script>
  </body>
</html>
